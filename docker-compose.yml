services:
  gateway:
    image: biswasakash/postit-gateway:docker-deployment
    container_name: postit-gateway
    ports:
      - "8901:80"
    depends_on:
      server:
        condition: service_healthy
        restart: true
      client:
        condition: service_healthy
        restart: true
  client:
    image: biswasakash/postit-client:docker-deployment
    container_name: postit-client
    environment:
      - PORT=4800
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4800" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    depends_on:
      server:
        condition: service_healthy
        restart: true
  server:
    image: biswasakash/postit-server:docker-deployment
    container_name: postit-server
    environment:
      - SERVER_PORT=8501
      - JWT_SECRET=75867AA2039B13075BB92152F457AC6BBA6E7D3459AA04DA8F1EE1A921CC2170
      - JWT_ISSUER=postit.com
      - SPRING_R2DBC_URL=r2dbc:mysql://postit-db:3306/dockerdb
      - SPRING_R2DBC_USERNAME=postit
      - SPRING_R2DBC_PASSWORD=complexpassword
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8501/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    depends_on:
      db:
        condition: service_healthy
        restart: true
  db:
    image: mysql:8.0-bookworm
    container_name: postit-db
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_USER=postit
      - MYSQL_PASSWORD=complexpassword
      - MYSQL_DATABASE=dockerdb
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "postit", "-pcomplexpassword" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s # Optional: Time to wait before starting health checks

networks:
  post-it-network:
    driver: bridge
